{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asche\\\\Desktop\\\\PoliTo\\\\ThesisProject\\\\Control panel\\\\BraveProject_FDV\\\\control-panel\\\\src\\\\components\\\\OptionSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OptionSelector({\n  label,\n  param,\n  options,\n  onChange\n}) {\n  _s();\n  const [selected, setSelected] = useState(\"calm\");\n  const handleSelect = value => {\n    setSelected(value);\n    onChange(param, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control option-selector-horizontal\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"option-label-inline\",\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-buttons-inline\",\n      children: options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option-button ${selected === opt.value ? \"selected\" : \"\"}`,\n        onClick: () => handleSelect(opt.value),\n        children: opt.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(OptionSelector, \"gOysZzDXJm7OP9jBAvt1km9DguM=\");\n_c = OptionSelector;\nexport default OptionSelector;\nvar _c;\n$RefreshReg$(_c, \"OptionSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OptionSelector","label","param","options","onChange","_s","selected","setSelected","handleSelect","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asche/Desktop/PoliTo/ThesisProject/Control panel/BraveProject_FDV/control-panel/src/components/OptionSelector.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction OptionSelector({ label, param, options, onChange }) {\r\n  const [selected, setSelected] = useState(\"calm\");\r\n\r\n  const handleSelect = (value) => {\r\n    setSelected(value);\r\n    onChange(param, value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"control option-selector-horizontal\">\r\n      <label className=\"option-label-inline\">{label}:</label>\r\n      <div className=\"option-buttons-inline\">\r\n        {options.map((opt, index) => (\r\n          <button\r\n            key={index}\r\n            className={`option-button ${selected === opt.value ? \"selected\" : \"\"}`}\r\n            onClick={() => handleSelect(opt.value)}\r\n          >\r\n            {opt.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionSelector;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAEhD,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BF,WAAW,CAACE,KAAK,CAAC;IAClBL,QAAQ,CAACF,KAAK,EAAEO,KAAK,CAAC;EACxB,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBACjDZ,OAAA;MAAOW,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GAAEV,KAAK,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvDhB,OAAA;MAAKW,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCR,OAAO,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACtBnB,OAAA;QAEEW,SAAS,EAAE,iBAAiBJ,QAAQ,KAAKW,GAAG,CAACR,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;QACvEU,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACS,GAAG,CAACR,KAAK,CAAE;QAAAE,QAAA,EAEtCM,GAAG,CAAChB;MAAK,GAJLiB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACV,EAAA,CAxBQL,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AA0BvB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}